{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","log","setState","prevProps","name","props","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","intervalName","addEventListener","document","React","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,IAAI,EAAKR,MAAMC,MACvB,EAAKQ,SAAS,CACZR,KAAM,IAAIC,SAEX,OAdP,gCAiBE,SAAmBQ,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,uBAA4BE,EAAUC,KAAtC,eAAiDP,KAAKQ,MAAMD,SApBlE,kCAwBE,WACEN,OAAOQ,cAAcT,KAAKD,WAzB9B,oBA4BE,WACE,OACE,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKQ,MAAMD,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGV,KAAKJ,MAAMC,KAAKc,8BAtC3B,GAA2BC,aCDrBC,G,MAAgB,WACpB,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,KAGLK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAWR,KAHf,EAMES,aAAe,EANjB,uDAQE,WAAqB,IAAD,OAClBrB,OAAOsB,iBAAiB,eAAe,WACrC,EAAKlB,SAAS,CACZe,UAAU,OAIdI,SAASD,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CACZe,UAAU,OAIdpB,KAAKsB,aAAerB,OAAOC,aAAY,WACrC,EAAKG,SAAS,CACZgB,UAAWR,QAEZ,MAEEb,KAAKJ,MAAMwB,UACdnB,OAAOQ,cAAcT,KAAKsB,gBA5BhC,oBAgCE,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,6CAECV,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOb,KAAMP,KAAKJ,MAAMyB,mBArCxD,GAAyBI,IAAMb,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.b247f5cb.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line\n      console.log(this.state.date);\n      this.setState({\n        date: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string,\n};\n\nconst getRandomName = (): string => {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  intervalName = 0;\n\n  componentDidMount() {\n    window.addEventListener('contextmenu', () => {\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    this.intervalName = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    if (!this.state.hasClock) {\n      window.clearInterval(this.intervalName);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}